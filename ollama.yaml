---
systems:
  ollama:
    functions:
      chat:
        driver: ollama
        rawAction: chat
        parameters:
          engine: $?ctx.engine,sysData.engine
          convID: $ctx.convID
          prompt: $ctx.prompt
          temperature: $?ctx.temperature,sysData.temperature
          user: $ctx.user

        export_on_success:
          counter: $?data.counter
          convID: $?ctx.convID
          busy: $?data.busy

      chatContinue:
        driver: ollama
        rawAction: chatContinue
        parameters:
          convID: $ctx.convID
          counter: $ctx.counter
          timeout: $?ctx.ai_timeout
        export_on_success:
          content: $data.content
          done: $data.done
          msgType: $data.type

      chatStop:
        driver: ollama
        rawAction: chatStop
        parameters:
          convID: $ctx.convID
          counter: $?ctx.counter

      chatListen:
        driver: ollama
        rawAction: chatListen
        parameters:
          convID: $ctx.convID
          user: $ctx.user
          prompt: $ctx.prompt

  deepseek-r1:
    extends:
      - ollama
    data:
      engine: deepseek-r1:1.5b

  llama3:
    extends:
      - ollama
    data:
      engine: llama3_2


drivers:
  ollama:
    engine:
      qwen3:
        hide_think: true
        model: qwen3:4b
        temperature: 0.001
      llama3_2:
        model: llama3.2:latest
        temperature: 0.001
        # system_prompt: >
          # DO NOT USE TOOL CALLS, I REPEAT, DO NOT USE TOOL CALLS, UNLESS THE
          #  USER REQUESTS.
    tools:
      web_request:
        tool:
          type: function
          function:
            name: web_request
            description: |
              This function enables the AI mode to access internet. Only use
              when user asks.
            parameters:
              type: object
              properties:
                URL:
                  type:
                    - string
                  description: the url for the web page.
              requried:
                - URL
        workflow:
          call_workflow: ai/web_request

      get_file_from_github:
        tool:
          type: function
          function:
            name: get_file_from_github
            description: get file content from github
            parameters:
              type: object
              properties:
                git_repo:
                  type:
                    - string
                  description: the combined string with user name and repo name, for example myorg/myrepo.
                path:
                  type:
                    - string
                  decription: the path of the file in the repo, for example /src/index.js
                git_ref:
                  type:
                    - string
                  description: the branch name, tag name or a commit hash, if missing HEAD branch will be used, for example v1.2, d3e456a or main
              required:
                - git_repo
                - path
        workflow:
          call_workflow: ai/get_file_from_github


      search_knowledge_base:
        tool:
          type: function
          function:
            name: search_knowledge_base
            description: >
              search the knowledge for related information.
            parameters:
              type: object
              properties:
                question:
                  type:
                    - string
                  description: construct a question to ask to get related info.
              required:
                - question
        workflow:
          call_driver: "driver:qdrant.query"
          function:
            rawAction: rpc
          with:
            parameters:
              question: $args.question
              knowledge_base: honeydipper_qdrant
            output:
              info: $ret.related_info
              status: success

      # search_github:
      #   tool:
      #     type: function
      #     function:
      #       name: search_github
      #       description: search code issues users repos on github
      #      parameters:
      #         type: object
      #         properties:
      #           search_type:
      #             type: [ string ]
      #             description: the type of the content to search
      #             enum:
      #               - code
      #               - commits
      #               - issues
      #               - labels
      #               - repositories
      #               - topics
      #               - users
      #           page_num:
      #             type: [ string ]
      #             decription: the expected page of the results to return, defaults to 1
      #           search_query:
      #             type: [ string ]
      #             description: the search keywords and filters to use for the search
      #         required:
      #           - search_type
      #           - search_query
      #   workflow:
      #     call_workflow: ai/search_github
